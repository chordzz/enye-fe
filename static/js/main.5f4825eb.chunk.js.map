{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","components/filter-list/filter-list.component.jsx","App.js","index.js"],"names":["Card","person","className","FirstName","LastName","Email","PhoneNumber","Gender","Latitude","Longitude","CreditCardType","DomainName","MacAddress","URL","UserName","LastLogin","PaymentMethod","CardList","people","useState","activePage","setCurrentPage","profiles","indexOfLastProfile","indexOfFirstProfile","renderProfiles","slice","map","profile","index","itemsCountPerPage","totalItemsCount","length","pageRangeDisplayed","onChange","pageNumber","SearchBox","placeholder","handleChange","handleChangeFilter","type","FilterList","for","id","name","value","App","isLoading","setIsLoading","fetchedProfiles","setFetchedProfiles","searchField","setSearchField","toRender","setToRender","useEffect","a","fetch","response","json","jsonResponse","records","fetchProfiles","forEach","fullName","filteredPeople","filter","toLowerCase","includes","e","target","val","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wVAKaA,G,YAAO,SAAC,GAAD,IAAEC,EAAF,EAAEA,OAAF,OAEhB,cADA,CACA,OAAKC,UAAY,iBAAjB,UACI,+BAAKD,EAAOE,UAAZ,IAAwBF,EAAOG,YAC/B,8BAAG,4CAAsBH,EAAOI,SAChC,8BAAG,8CAAwBJ,EAAOK,eAClC,kCAEI,+BACI,6BAAI,8CACJ,6BAAKL,EAAOM,YAEhB,+BACI,6BAAI,gDACJ,6BAAKN,EAAOO,cAEhB,+BACI,6BAAI,iDACJ,6BAAKP,EAAOQ,eAEhB,+BACI,6BAAI,wDACJ,6BAAKR,EAAOS,oBAEhB,+BACI,6BAAI,mDACJ,6BAAKT,EAAOU,gBAEhB,+BACI,6BAAI,mDACJ,6BAAKV,EAAOW,gBAEhB,+BACI,6BAAI,2CACJ,6BAAKX,EAAOY,SAEhB,+BACI,6BAAI,gDACJ,6BAAKZ,EAAOa,cAEhB,+BACI,6BAAI,kDACJ,6BAAKb,EAAOc,eAEhB,+BACI,6BAAI,sDACJ,6BAAKd,EAAOe,2BC1CfC,EAAW,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAAY,EAIGC,mBAAS,GAJZ,mBAI3BC,EAJ2B,KAIfC,EAJe,KAM5BC,EAAWJ,EAEXK,EADkB,GACGH,EACrBI,EAAsBD,EAFJ,GAMlBE,EAHkBH,EAASI,MAAMF,EAAqBD,GAGrBI,KAAI,SAACC,EAASC,GACjD,OAAO,cAAC,EAAD,CAAkB5B,OAAQ2B,GAAfC,MAQtB,OACI,gCACI,qBAAK3B,UAAY,YAAjB,SACKuB,IAGL,qBAAKvB,UAAU,aAAf,SACI,cAAC,IAAD,CACIkB,WAAeA,EACfU,kBAAsB,EACtBC,gBAAmBT,EAASU,OAC5BC,mBAAoB,EACpBC,SAjBS,SAACC,GACtBd,EAAec,YCvBVC,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,EAA6BC,mBAA7B,OACrB,8BACI,uBAAOrC,UAAY,SAASsC,KAAO,SAC/BH,YAAeA,EACfH,SAAYI,QCJXG,G,MAAa,SAAC,GAAoB,IAAnBH,EAAkB,EAAlBA,aAExB,OACI,sBAAKpC,UAAU,cAAf,UACI,uBAAOwC,IAAI,UAAX,+BACA,yBAAQxC,UAAU,SAASyC,GAAG,UAAUC,KAAK,UAAUV,SAAUI,EAAjE,UACI,wBAAQO,MAAM,GAAd,iBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,iBAAd,+BAGJ,uBAAOH,IAAI,UAAX,uCACA,yBAAQxC,UAAU,SAAQyC,GAAG,WAAWC,KAAK,WAAWV,SAAUI,EAAlE,UACI,wBAAQO,MAAM,GAAd,iBACA,wBAAQA,MAAM,SAAd,qBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,cAAd,iCC6EDC,MArFf,WAAiB,IAAD,EAGoB3B,oBAAS,GAH7B,mBAGP4B,EAHO,KAGIC,EAHJ,OAIgC7B,mBAAS,IAJzC,mBAIP8B,EAJO,KAIUC,EAJV,OAKwB/B,mBAAS,IALjC,mBAKPgC,EALO,KAKMC,EALN,OAMkBjC,mBAAS,IAN3B,mBAMPkC,EANO,KAMGC,EANH,KA2Bd,GAnBAC,qBAAU,YAIW,uCAAG,8BAAAC,EAAA,6DACpBR,GAAa,GADO,SAGGS,MAAM,8CAHT,cAGdC,EAHc,gBAIOA,EAASC,OAJhB,OAIdC,EAJc,OAMpBV,EAAmBU,EAAaC,QAAQvC,UACxC0B,GAAa,GAPO,2CAAH,qDAUnBc,KACC,IAIAf,EACG,OAAO,4CAIXE,EAAgBc,SAAQ,SAAA9D,GAAM,OAAIA,EAAO+D,SAAW/D,EAAOE,UAAY,IAAKF,EAAOG,YAGnF,IAAI6D,EAAiBhB,EAAgBiB,QAAO,SAAAjE,GAAM,OAAIA,EAAO+D,SAASG,cAAcC,SAASjB,EAAYgB,kBA8BzG,OACE,sBAAKjE,UAAU,MAAf,UAEE,0CAGA,cAAC,EAAD,CAAWmC,YAAY,SAASC,aAlCf,SAAA+B,GAEnBjB,EAAeiB,EAAEC,OAAOzB,OACxBS,EAAY,OAkCV,cAAC,EAAD,CAAYhB,aA7BD,SAAC+B,GAEd,IAAME,EAAMF,EAAEC,OAAOzB,MAErB,MAAsB,YAAlBwB,EAAEC,OAAO1B,MAA8B,KAAR2B,EAE1BjB,EAAYL,EAAgBiB,QAAO,SAAAtC,GAAO,OAAIA,EAAQrB,SAAWgE,MAE7C,aAAlBF,EAAEC,OAAO1B,MAA+B,KAAR2B,EAElCjB,EAAYL,EAAgBiB,QAAO,SAAAtC,GAAO,OAAIA,EAAQZ,gBAAkBuD,MAI1EjB,EAAYW,MAkBjB,cAAC,EAAD,CAAU/C,OAAUmC,GAAsBY,QCrFlDO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5f4825eb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.styles.css';\r\n\r\n\r\nexport const Card = ({person}) => (\r\n    // Renders individual cards\r\n    <div className = 'card-container'>\r\n        <h2>{person.FirstName} {person.LastName}</h2>\r\n        <p><span>E-mail: </span>{person.Email}</p>\r\n        <p><span>Phone-no: </span>{person.PhoneNumber}</p>\r\n        <table>\r\n            \r\n            <tr>\r\n                <td><span>Gender: </span></td>\r\n                <td>{person.Gender}</td>\r\n            </tr>\r\n            <tr>\r\n                <td><span>Latitude: </span></td>\r\n                <td>{person.Latitude}</td>\r\n            </tr>\r\n            <tr>\r\n                <td><span>Longitude: </span></td>\r\n                <td>{person.Longitude}</td>\r\n            </tr>\r\n            <tr>\r\n                <td><span>Credit Card Type: </span></td>\r\n                <td>{person.CreditCardType}</td>\r\n            </tr>\r\n            <tr>\r\n                <td><span>Domain Name: </span></td>\r\n                <td>{person.DomainName}</td>\r\n            </tr>\r\n            <tr>\r\n                <td><span>Mac Address: </span></td>\r\n                <td>{person.MacAddress}</td>\r\n            </tr>\r\n            <tr>\r\n                <td><span>URL: </span></td>\r\n                <td>{person.URL}</td>\r\n            </tr>\r\n            <tr>\r\n                <td><span>Username: </span></td>\r\n                <td>{person.UserName}</td>\r\n            </tr>\r\n            <tr>\r\n                <td><span>Last Login: </span></td>\r\n                <td>{person.LastLogin}</td>\r\n            </tr>\r\n            <tr>\r\n                <td><span>Payment Method: </span></td>\r\n                <td>{person.PaymentMethod}</td>\r\n            </tr>\r\n\r\n        </table>\r\n        \r\n    </div>\r\n)\r\n","import React, {useState}from 'react';\r\nimport Pagination from \"react-js-pagination\";\r\n\r\nimport './card-list.styles.css';\r\n\r\nimport { Card } from \"../card/card.component\";\r\n\r\n\r\n\r\nexport const CardList = ({people}) => {\r\n\r\n\r\n    // Logic for Pagination\r\n    const [activePage, setCurrentPage] = useState(1);\r\n\r\n    const profiles = people;\r\n    const profilesPerPage = 20;\r\n    const indexOfLastProfile = activePage * profilesPerPage;\r\n    const indexOfFirstProfile = indexOfLastProfile - profilesPerPage;\r\n    const currentProfiles = profiles.slice(indexOfFirstProfile, indexOfLastProfile);\r\n\r\n\r\n    const renderProfiles = currentProfiles.map((profile, index) => {\r\n        return <Card key={index} person={profile} />\r\n    })\r\n\r\n    const handlePageChange = (pageNumber) => {\r\n        setCurrentPage(pageNumber)\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className = 'card-list'>\r\n                {renderProfiles}\r\n            </div>\r\n\r\n            <div className='pagination'>\r\n                <Pagination \r\n                    activePage = { activePage }\r\n                    itemsCountPerPage = { 3 }\r\n                    totalItemsCount = {profiles.length}\r\n                    pageRangeDisplayed={3}\r\n                    onChange={handlePageChange}\r\n                    \r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChange, handleChangeFilter}) => (\r\n    <div>\r\n        <input className = 'search' type = 'search' \r\n            placeholder = {placeholder} \r\n            onChange = {handleChange}\r\n        >\r\n\r\n        </input>\r\n    </div>\r\n)\r\n\r\nexport default SearchBox;","import React from \"react\";\r\n\r\nimport './filter-list.styles.css'\r\n\r\nexport const FilterList = ({handleChange}) => {\r\n\r\n    return(\r\n        <div className='filter-list'>\r\n            <label for=\"fGender\">Filter By Gender:</label>\r\n            <select className='filter' id='fGender' name=\"fGender\" onChange={handleChange}>\r\n                <option value=\"\">...</option>\r\n                <option value=\"Male\">Male</option>\r\n                <option value=\"Female\">Female</option>\r\n                <option value=\"Prefer to skip\">Prefer to Skip</option>\r\n            </select>\r\n\r\n            <label for=\"fGender\">Filter By Payment Method:</label>\r\n            <select className='filter'id='fPayment' name=\"fPayment\" onChange={handleChange}>\r\n                <option value=\"\">...</option>\r\n                <option value=\"paypal\">Pay pal</option>\r\n                <option value=\"cc\">CC</option>\r\n                <option value=\"check\">Check</option>\r\n                <option value=\"money order\">Money Order</option>\r\n            </select>\r\n        </div>   \r\n    )\r\n}\r\n\r\n","// Main Program\n\n\n// Import needed dependencies \nimport React, { useState, useEffect } from 'react';\n\nimport './App.css';\n\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from \"./components/search-box/search-box.component\";\nimport { FilterList } from './components/filter-list/filter-list.component';\n\n\n// Main app function\nfunction App () {\n\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [fetchedProfiles, setFetchedProfiles] = useState([]);\n  const [searchField, setSearchField] = useState('');\n  const [toRender, setToRender] = useState('');\n  \n  useEffect(() => {\n\n\n    // this fetches the profiles from the provided API\n    const fetchProfiles = async () => {\n      setIsLoading(true);\n\n      const response = await fetch('https://api.enye.tech/v1/challenge/records');\n      const jsonResponse = await response.json();\n      \n      setFetchedProfiles(jsonResponse.records.profiles);\n      setIsLoading(false);\n    }\n\n    fetchProfiles();\n  }, []);\n\n  \n  // Checks if the API has fetched the needed profiles and populated the state or not\n  if(isLoading) {\n        return <h1>Loading...</h1>\n  } else {\n\n    // Adds a fullname(concatenation of firstname and lastname) property to the array of profiles \n    fetchedProfiles.forEach(person => person.fullName = person.FirstName + ' ' +person.LastName);\n\n    //This is responsible for the search function in the app\n    let filteredPeople = fetchedProfiles.filter(person => person.fullName.toLowerCase().includes(searchField.toLowerCase()));\n\n    const handleChange = e => {\n\n      setSearchField(e.target.value)\n      setToRender('');\n    }\n\n\n    // This is responsible for the individual filter fields on the app\n    const filter = (e) => {\n\n      const val = e.target.value;\n\n      if (e.target.name === 'fGender' && val !== '') {\n\n        return setToRender(fetchedProfiles.filter(profile => profile.Gender === val));\n        \n      } else if (e.target.name === 'fPayment' && val !== '') {\n        \n        return setToRender(fetchedProfiles.filter(profile => profile.PaymentMethod === val));\n\n      }\n\n      return setToRender(filteredPeople);\n      \n    }\n\n\n    // This returns the needed div to be rendered\n    return (\n      <div className=\"App\">\n\n        <h1>Profiles</h1>\n\n        {/* Searchbox component rendered */}\n        <SearchBox placeholder=\"Search\" handleChange={handleChange} />\n\n        {/* Dropdown for filtering fields */}\n        <FilterList handleChange = {filter} />\n\n        {/* List to be rendered */}\n        <CardList people = {toRender ? toRender : filteredPeople} />\n        \n      </div>\n    )\n  }\n  \n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}